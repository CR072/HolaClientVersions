<%- include('./partials/head') %>

    <body class="bg-zinc-950">
        <div class="antialiased">
            <%- include('./partials/topnav') %>
                <%- include('./partials/sidebar') %>
                    <main class="p-4 md:ml-64 h-auto pt-20">
                        <div class="bg-zinc-900 text-white shadow-lg rounded-lg p-4">
                            <div class="text-xl font-semibold" id="title">Manage resources</div>
                            <hr class="w-full border-b border-zinc-700 my-2">
                            <div class="mb-4">
                                <label class="block text-gray-300">Users:</label>

                                <div data-dropdown-toggle="userslist" id="rusers"
                                    class="w-full bg-zinc-800 rounded-lg p-2">Select an user</div>

                                <%- include('./partials/user') %>


                            </div>
                            <div class="mb-4">
                                <label class="block text-gray-300">Function:</label>
                                <select id="rfunction" class="w-full outline-none bg-zinc-800 rounded-lg p-2">
                                    <option value="check">Check resources</option>
                                    <option value="set">Set Resources</option>
                                    <option value="add">Add Resources</option>
                                    <option value="remove">Remove Resources</option>
                                </select>
                            </div>
                            <div class="flex mb-4">
                                <div class="w-1/4 pr-2">
                                    <label for="ram" class="block text-gray-300">Ram:</label>
                                    <input type="number" id="ram" class="w-full outline-none bg-zinc-800 rounded-lg p-2"
                                        placeholder="1024">
                                </div>
                                <div class="w-1/4 pr-2">
                                    <label for="disk" class="block text-gray-300">Disk:</label>
                                    <input type="number" id="disk"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1024">
                                </div>
                                <div class="w-1/4 pr-2">
                                    <label for="cpu" class="block text-gray-300">Cpu:</label>
                                    <input type="number" id="cpu" class="w-full outline-none bg-zinc-800 rounded-lg p-2"
                                        placeholder="100">
                                </div>
                                <div class="w-1/4">
                                    <label for="servers" class="block text-gray-300">Slots:</label>
                                    <input type="number" id="servers"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1">
                                </div>
                            </div>
                            <div class="flex mb-4">
                                <div class="w-1/3 pr-2">
                                    <label for="databases" class="block text-gray-300">Databases:</label>
                                    <input type="number" id="databases"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1">
                                </div>
                                <div class="w-1/3 pr-2">
                                    <label for="allocations" class="block text-gray-300">Allocations:</label>
                                    <input type="number" id="allocations"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1">
                                </div>
                                <div class="w-1/3">
                                    <label for="backups" class="block text-gray-300">Backups:</label>
                                    <input type="number" id="backups"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1">
                                </div>
                            </div>
                            <div class="mb-4">
                                <button role="button" onclick="resources()" id="rbtn"
                                    class="w-full bg-zinc-800 hover:bg-zinc-800/70 rounded-lg p-2">
                                    Submit
                                </button>
                            </div>
                        </div>

                        <div class="bg-zinc-900 text-white mt-4 shadow-lg rounded-lg p-4">
                            <div class="text-xl font-semibold" id="title">Manage coins</div>
                            <hr class="w-full border-b border-zinc-700 my-2">
                            <div class="mb-4">
                                <label class="block text-gray-300">Users:</label>

                                <div data-dropdown-toggle="userslist" id="cusers"
                                    class="w-full bg-zinc-800 rounded-lg p-2">Select an user</div>

                                <%- include('./partials/user') %>


                            </div>
                            <div class="flex mb-4">
                                <div class="w-2/4 pr-2">
                                    <label class="block text-gray-300">Function:</label>
                                    <select id="cfunction" class="w-full outline-none bg-zinc-800 rounded-lg p-2">
                                        <option value="set">Set Coins</option>
                                        <option value="add">Add Coins</option>
                                        <option value="remove">Remove Coins</option>
                                    </select>
                                </div>
                                <div class="w-1/4 pr-2">
                                    <label class="block text-gray-300">Coins:</label>
                                    <input type="number" id="coins"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="1024">
                                </div>
                                <div class="w-1/4 pr-2">
                                    <label class="block text-gray-300">Final Coins:</label>
                                    <input type="number" id="fcoins"
                                        class="w-full outline-none bg-zinc-800 rounded-lg p-2" placeholder="coins"
                                        disabled>
                                </div>
                            </div>
                            <div class="mb-4">
                                <button role="button" onclick="coins()" id="cbtn"
                                    class="w-full bg-zinc-800 hover:bg-zinc-800/70 rounded-lg p-2">
                                    Submit
                                </button>
                            </div>
                        </div>
                    </main>

                    <script>
                        async function user(n) {
                            const dropdownToggle = document.querySelector('[data-dropdown-toggle="userslist"]');
                            dropdownToggle.click();

                            let div = document.getElementById('rusers');
                            div.innerHTML = `
<div class="flex items-center cursor-pointer w-full hover:bg-zinc-800 rounded-lg gap-3 hover:transition duration-700 ease-in-out hover:pl-4 hover:pr-4">
    <img class="h-10 w-10 rounded-full" src="${n.avatar}" alt="Avatar">
    <div class="flex items-center justify-between w-full">
        <h3 class="text-md leading-none text-gray-200">
            ${n.name.first} ${n.name.last}
            <br><span class="text-sm text-gray-300">${n.email}</span>
        </h3>
        <span class="text-right">
            <div class="hidden lg:block">
                <p class="ml-2 text-sm font-medium text-gray-200">
                    HCID: ${n.hcid}</p>
                <p class="ml-2 text-sm font-medium text-gray-200">
                    ${n.username}</p>
            </div>
        </span>
    </div>
</div>
`;
                            let div1 = document.getElementById('cusers');
                            div1.innerHTML = `
<div class="flex items-center cursor-pointer w-full hover:bg-zinc-800 rounded-lg gap-3 hover:transition duration-700 ease-in-out hover:pl-4 hover:pr-4">
    <img class="h-10 w-10 rounded-full" src="${n.avatar}" alt="Avatar">
    <div class="flex items-center justify-between w-full">
        <h3 class="text-md leading-none text-gray-200">
            ${n.name.first} ${n.name.last}
            <br><span class="text-sm text-gray-300">${n.email}</span>
        </h3>
        <span class="text-right">
            <div class="hidden lg:block">
                <p class="ml-2 text-sm font-medium text-gray-200">
                    HCID: ${n.hcid}</p>
                <p class="ml-2 text-sm font-medium text-gray-200">
                    ${n.username}</p>
            </div>
        </span>
    </div>
</div>
`;
                            const cbtn = document.getElementById('cbtn');
                            cbtn.dataset.id = n.hcid;
                            const rbtn = document.getElementById('rbtn');
                            rbtn.dataset.id = n.hcid;
                            const rres = await fetch(`/api/admin/users/resources?user=${n.hcid}`);
                            const rd = await rres.json();

                            if (rd.length > 0) {
                                for (const resource of rd) {
                                    const elementId = resource.name.toLowerCase();
                                    const element = document.getElementById(elementId);
                                    if (element) {
                                        element.value = resource.total;
                                    }
                                }
                            }

                            const cres = await fetch(`/api/admin/coins/${n.hcid}`);
                            const cd = await cres.json();
                            document.getElementById('coins').value = cd
                        }
                        async function resources() {
                            try {
                                const id1 = document.getElementById('rbtn').dataset.id;
                                const f = document.getElementById('rfunction').value;

                                const rres = await fetch(`/api/admin/users/resources?user=${id1}`);
                                const rd = await rres.json();

                                if (rd.length > 0) {
                                    for (const resource of rd) {
                                        const elementId = resource.name.toLowerCase();
                                        const element = document.getElementById(elementId);

                                        if (element) {
                                            let resk = parseInt(element.value);
                                            let total = 0;

                                            if (f === 'add') {
                                                total = resk + parseInt(resource.total)
                                            } else if (f === 'set') {
                                                total = resk
                                            } else if (f === 'remove') {
                                                total = Math.max(resk - parseInt(resource.total), 0);
                                            }

                                            element.value = total;

                                            console.log(`${resource.name}: ${total}`);
                                        }
                                    }
                                }
                                const ram = document.getElementById('ram').value;
                                const disk = document.getElementById('disk').value;
                                const cpu = document.getElementById('cpu').value;
                                const servers = document.getElementById('servers').value;
                                const backups = document.getElementById('backups').value;
                                const allocations = document.getElementById('allocations').value;
                                const databases = document.getElementById('databases').value;
                                const response = await fetch(`/api/admin/users/resources?user=${id1}&ram=${ram}&disk=${disk}&cpu=${cpu}&servers=${servers}&databases=${databases}&backups=${backups}&allocations=${allocations}&payload=1`);
                                const data = await response.json();
                                if (data.success == true) {
                                    toastr.success(data.message);
                                }
                            } catch (error) {
                                console.error("Error changing resources:", error);
                                throw error;
                            }
                        }
                        const ce = document.getElementById("coins");
                                const cf = document.getElementById('cfunction');
                                const fc = document.getElementById('fcoins');
                        async function coins() {
                            try {
                                const id = document.getElementById('cbtn').dataset.id;
                                const cres = await fetch(`/api/admin/coins/${id}`);
                                const cd = await cres.json();

                                const coins = fc.value;
                                const response = await fetch(`/api/admin/coins/${id}?coins=${coins}&payload=1`);
                                const data = await response.json();

                                if (data.success === true) {
                                    toastr.success(data.message);
                                }
                            } catch (error) {
                                console.error("Error changing package:", error);
                                throw error;
                            }
                        }
                        ce.addEventListener("input", uf);
                        cf.addEventListener("change", uf);
                        async function uf() {
                            const id = document.getElementById('cbtn').dataset.id;
                            const cres = await fetch(`/api/admin/coins/${id}`);
                            const cd = await cres.json();
                            if (cf.value === "add") {
                                fc.value = parseInt(ce.value) + parseInt(cd)
                            } else if (cf.value === "set") {
                                fc.value = parseInt(ce.value)
                            } else if (cf.value === "remove") {
                                fc.value = Math.max(parseInt(cd) - parseInt(ce.value), 0);
                            }
                        }
                    </script>